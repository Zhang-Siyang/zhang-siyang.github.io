[{"title":"上山下乡","date":"2017-03-24T12:37:36.000Z","path":"2017/03/24/上山下乡/","text":"我进山了。 上山很累，山路很窄。路边有被丢弃的枝杈，很细，不能做拐杖。 电波衰减得很厉害，里保定才不过二三十里，就没有信号了，即使是2G。 难以置信的，有一块开垦了的农田，在近山顶时。 下山了，旁边没有护栏。 有羊羔与狗屎，但没有WiFi。 一个地方大户在门前修了水泥路，停了一辆老人电瓶车【四轮】 那个黑洞好像是地窖。 哦！到大路了！ 回来的路上，我看着旁边的电线杆.","tags":[{"name":"随笔","slug":"随笔","permalink":"https://zhangsy.tk/tags/随笔/"}]},{"title":"20170321-简单 T-SQL 语句练习","date":"2017-03-22T12:03:06.000Z","path":"2017/03/22/20170321-简单-T-SQL-语句练习/","text":"本篇文章记录 20170321 交的 SQL 语句实训报告 实验目标: 掌握 T-SQL 的基本用法实验人: ZhangSiyang 1. 创建名为stuDB的数据库，属性都取默认值1)创建名为stuDB的数据库，属性都取默认值。 代码1create database stuDB; 收获创建数据库：create database NAME，未指定的参数取默认值 2. 删除数据库stuDB题目2)删除数据库stuDB。 代码1drop database stuDB; 收获删除数据库：drop database NAME 3. 创建满足如下要求的数据库题目3)创建满足如下要求的数据库： 数据库名称stuDB(存储位置D:\\SQL),包含两个数据文件和两个日志文件： 第一个数据文件stuDB_data1初始大小为50MB，文件的最大大小不受限制，文件的增长率为10%； 第二个数据文件stuDB_data2初始大小为50MB，文件的最大大小200MB，文件的增长率为10MB； 日志文件stuDB_log1初始大小为10MB，文件的最大大小为100MB，文件的增长率为10MB； 日志文件stuDB_log2初始大小为10MB，文件的最大大小为100MB，文件的增长率为10%。 代码1234567891011121314151617181920212223242526create database stuDB ON ( NAME = stuDB_data1, FILENAME='D:\\stuDB_data1.MDF', SIZE = 50, FILEGROWTH = 10% ) , ( NAME = stuDB_data2, FILENAME='D:\\stuDB_data2.mdf', SIZE = 50, FILEGROWTH = 10%, MAXSIZE = UNLIMITED ) LOG ON ( NAME = stuDB_log1, FILENAME='D:\\stuDB_log1.ldf', SIZE = 10, MAXSIZE = 100, FILEGROWTH = 10 ), ( NAME = stuDB_log2, FILENAME='D:\\stuDB_log2.ldf', SIZE = 10, MAXSIZE=100, FILEGROWTH = 10% ); 收获 NAME 与 FILENAME 都是必须指出的，单位为mb时，可写可不写 格式见上 4. 在stuDB数据库中添加数据文件stuDB_data3,初……题目4)在stuDB数据库中添加数据文件stuDB_data3,初始大小为20MB，增长增量为15%，最大大小100MB； 代码1234567alter database stuDBadd file ( name = stuDB_data3, filename='D:\\stuDB_data3.MDF', size =20, filegrowth = 15%, maxsize=100); 收获添加文件只需三步：1. 进入相应数据库 2. 添加文件 3. 执行 5. 将数据文件stuDB_data3的最大大小改为不受限制题目5)修改数据库stuDB的属性，将数据文件stuDB_data3的最大大小改为不受限制； 代码12345alter database stuDBmodify file( name =stuDB_data3, maxsize = unlimited); 收获主要是学习到这个格式，别的……没有 6. 删除日志文件stuDB_log2题目6)将日志文件stuDB_log2删除； 代码12alter database stuDBREMOVE file stuDB_log2; 收获REMOVE file FILENAME 7. 创建自定义文件组second题目7)创建自定义文件组second； 代码12alter database stuDBadd filegroup second; 8. 添加数据文件stuDB_data4到文件组second题目8)添加数据文件stuDB_data4到文件组second,初始大小为20MB，增长增量为10MB，最大大小100MB； 代码12345678alter database stuDBadd file ( name=stuDB_data4, filename='D:\\stuDB_data4.MDF', size=20, filegrowth=10, maxsize=100)to filegroup second; 收获…to filegroup second; 9. 删除文件组second题目9)删除文件组second； 代码123alter database stuDBREMOVE file stuDB_data4REMOVE filegroup second; 收获删除文件组时，文件组内必须没有文件 10. 将数据库stuDB重命名为studentDB题目10)将数据库stuDB重命名为studentDB； 代码12alter database stuDBmodify name = studentDB; 11. 按如下要求创建数据库题目11)按如下要求创建数据库： 数据库名称studentDB(存储位置D:\\SQL，要求判断该服务器上是否已有同名数据库,若有,将其删除), 包含三个数据文件和一个日志文件： 第一个数据文件stuDB_data1放在主文件组PRIMARY,初始大小为50MB,其他属性默认； 第二个数据文件stuDB_data2放在SECOND文件组，初始大小为50MB，其他属性默认； 第三个数据文件stuDB_data3放在SECOND文件组，初始大小为50MB，其他属性默认； 日志文件stuDB_log初始大小为10MB，文件的最大大小为100MB。 代码123456789101112131415161718192021if exists(select * from sysdatabases where name = 'stuDB') drop database stuDBcreate database studentDB on ( NAME = stuDB_data1, FILENAME = 'D:\\SQL\\stuDB_data1.MDF', SIZE = 50 )to filegroup PRIMARY , ( NAME = stuDB_data2, FILENAME = 'D:\\SQL\\stuDB_data2.mdf', SIZE = 50 )to filegroup SECOND , ( NAME = stuDB_data3, FILENAME = 'D:\\SQL\\stuDB_data3.mdf', SIZE = 50 )to filegroup SECOND log on ( NAME = stuDB_log, FILENAME = 'stuDB_log.ldf', SIZE = 10, MAXSIZE =100); 收获if exists(select * from sysdatabases where name = &apos;stuDB&apos;) drop database stuDB 文中所述代码均已开源 : &lt; TODO &gt;","tags":[]},{"title":"20170305-今天的C#实验报告","date":"2017-03-05T11:34:52.000Z","path":"2017/03/05/20170305-今天的C-实验报告/","text":"实验目标: 掌握C#的基本用法实验人: ZhangSiyang实验内容: [C#特性演示,C#实现的冒泡排序,矩形每行成员及行内最大值的输出] 目录 C#特性演示 代码 运行 编写思路与难题 收获 C#-冒泡排序 代码 运行 编写思路与难题 收获 多维数组相关操作 代码 运行 编写思路与难题 收获 C#特性演示代码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156using System;namespace ConsoleApplication1&#123; class Program &#123; static int Main(string[] args) &#123; Program n = new Program(); //写的方法，马马虎虎的，仅作试水 Console.WriteLine(\"即将演示数字 A 与 B 的交换\"); n.swap(3, 7); Console.ReadLine(); //清屏 Console.WriteLine(\"即将演示 串的输入与输出\"); n.xingminghenianling(); Console.ReadLine(); Console.WriteLine(\"即将演示 用 If 判断成绩\"); n.panduanjige_if(); Console.ReadLine(); Console.WriteLine(\"即将演示 用 Switch 判断成绩\"); n.panduanjige_switch(); Console.ReadLine(); Console.WriteLine(\"即将演示 用 Switch 判断该月天数\"); n.panduantianshu(); Console.ReadLine(); Console.WriteLine(\"即将演示 分段函数\"); n.fenduanhanshu(); Console.ReadLine(); Console.Write(\"演示完成，按任意键以退出\"); Console.Read(); return 0; &#125; public int swap(int a, int b) &#123; Console.WriteLine(\"A IS: &#123;0&#125;, B IS: &#123;1&#125;.\", a, b); a = a * b; //也可以交换，就是这两个数不能太大，b还不能为0 b = a / b; a = a / b; Console.WriteLine(\"A IS: &#123;0&#125;, B IS: &#123;1&#125;.\", a, b); return 0; &#125; public int xingminghenianling() &#123; Console.Write(\"Please Input Your Name:\"); string xingming = Console.ReadLine(); Console.Write(\"Please Input Your Eage:\"); int nianling = int.Parse(Console.ReadLine()); Console.WriteLine(\"Your Name Is:&#123;0&#125;,Eage Is:&#123;1&#125;\", xingming, nianling); return 0; &#125; public int fengefu() &#123; Console.WriteLine(\"------------------------\"); //被弃用的分隔符 return 0; &#125; public int panduanjige_if() &#123; Console.Write(\"Please Input Your Score:\"); double get = double.Parse(Console.ReadLine()); int score = -1; if (get &gt;= 0 &amp;&amp; get &lt;= 100) &#123; score = (int)get / 10; if (score &gt; 8) Console.WriteLine(\"Nice!!!\"); else if (score &gt; 5) Console.WriteLine(\"Good!!\"); else Console.WriteLine(\"It's Time To Learn.\"); &#125; else Console.WriteLine(\"大哥你这不按套路出牌啊！\"); return score; &#125; public int panduanjige_switch() &#123; Console.Write(\"Please Input Your Score:\"); double get = double.Parse(Console.ReadLine()); int score = -1; string flag; if (get &gt;= 0 &amp;&amp; get &lt;= 100) &#123; score = (int)get / 10; switch (score) &#123; case 10: case 9: flag = \"Nice!!!\"; break; case 7: case 8: case 6: flag = \"Good!!\"; break; default: flag = \"It's Time To Learn.\"; break; &#125; &#125; else flag = \"大哥你这不按套路出牌啊！\"; Console.WriteLine(flag); return score; &#125; public int panduantianshu() &#123; int mouth; Console.WriteLine(\"What time is it today?\"); mouth = int.Parse(Console.ReadLine()); string flag; switch (mouth) &#123; case 1: case 3: case 5: case 7: case 8: case 10: case 12: flag = \"31\"; break; case 4: case 6: case 9: case 11: flag = \"30\"; break; case 2: flag = \"28 OR 29\"; break; default: flag = \"你进入了异世界\"; break; &#125; Console.WriteLine(flag); if (flag == \"28 OR 29\") flag = \"28\"; if (flag == \"你进入了异世界\") flag = \"0\"; return int.Parse(flag); &#125; public int fenduanhanshu() &#123; double x; int y; Console.Write(\"Please Input X:\"); x = (int)double.Parse(Console.ReadLine()); if (x &gt; 0) y = 1; else if (x == 0) y = 0; else y = -1; Console.WriteLine(\"&#123;0&#125;\", y); return y; &#125; &#125;&#125; 运行 编写思路与难题这道题是我写的第一个 C# 程序，再往前只有课上的纸上代码，不算是写程序。现在回头来但的话大概有一下几个特点： 分模块书写，制成方法体[体?]一开始我也是打算写成一大坨代码的，写着写着感觉 C# 比 C 啰嗦多了，十四寸的本上翻页翻得我直着急。所以……当然是写成函数方法啦！还能以后再用，虽然不大可能…… 更多的考虑到了意外情况其实之前我在编写 C 程序时也有这方面的考虑，但是写十行代码其中有九行都是数据检查未免太让人感觉尴尬了，代码也不够高效。但是最近又在想，现在电脑性能这么好，简单的程序错误却可能导致用户流失，我还是把心中所想放到代码之中吧。心中没有想到的当然也就没有进行检查了 想不到检查方法的也没有写，检查方法忒复杂的也没有写…… 编写时遇到的的困难 写成的方法不知道怎么被 Main 调用; 这个在 Google 之后解决了，但也只是照猫画虎 该怎么输入与存储成绩才好？一开始是用 int score = int.Parse(Console.ReadLine()) / 10 的，可那样无法解决带小数成绩的录入以及对数据合法性的判断。为了带小数成绩我写出了 int score = (int)double.Parse(Console.ReadLine()) 这样的方法，但这样还是无法解决数据合法性[ 102 居然是合法数据，你信吗？]，综合考虑之后，下面的解决方案诞生： 123456789101112131415161718192021222324public int panduanjige_switch()&#123; Console.Write(\"Please Input Your Score:\"); double get = double.Parse(Console.ReadLine()); int score = -1; string flag; if (get &gt;= 0 &amp;&amp; get &lt;= 100) &#123; score = (int)get / 10; switch (score) &#123; case 10: case 9: flag = \"Nice!!!\"; break; case 7: case 8: case 6: flag = \"Good!!\"; break; default: flag = \"It's Time To Learn.\"; break; &#125; &#125; else flag = \"大哥你这不按套路出牌啊！\"; Console.WriteLine(flag); return score;&#125; 对！还有问题。我想把某一个月份含有的天数返回给主调函数，当遇上 2 月时，怎么办？！！！ 123456Console.WriteLine(flag);if (flag == \"28 OR 29\") flag = \"28\";if (flag == \"你进入了异世界\") flag = \"0\";return int.Parse(flag); 收获 Program n = new Program(); Console.Clear 有时候，把程序写的复杂点也不是什么什么坏事儿 C#-冒泡排序代码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051using System;namespace Bubble_Sort&#123; class Program &#123; static void Main(string[] args) &#123; Random rd = new Random(); //为随机赋值做准备[这个过程不知道叫什么] int[] box = new int[27]; for (int i = 0; i &lt; 27; i++) &#123; box[i] = rd.Next(1000); //随机赋值 &#125; int s; //交换用的空盒子 for (int i = 0; i &lt; 27; i++) &#123; Console.Write(\"&#123;0:D3&#125; \", box[i]); //以宽度为三的格式输出 if ((i + 1) % 5 == 0) //逢五换行 Console.Write(\"\\n\"); &#125; Console.WriteLine(\"\\n\\n以上是初始数组，下面是排序之后的数组\\n\"); for (int i=0;i&lt;26;i++) //冒泡排序 &#123; for(int j=i+1;j&lt;27;j++) &#123; if(box[j]&gt;box[i]) &#123; s = box[i]; //数值交换 box[i] = box[j]; //数值交换 box[j] = s; //数值交换 &#125; &#125; &#125; for (int i = 0; i &lt; 27; i++) //交换完成，输出 &#123; Console.Write(\"&#123;0:D3&#125; \", box[i]); if ((i+1) % 5 == 0) Console.Write(\"\\n\"); &#125; Console.Write(\"\\n按任意键以退出\"); Console.ReadLine(); &#125; &#125;&#125; 运行 编写思路与难题写这道题的时候已经熟练了不少了，因此也没太多值得说的 Random.Next() 返回的值随机性太差了，只能用来做范例 换行这样做： 12if ((i + 1) % 5 == 0) //逢五换行 Console.Write(\"\\n\"); 大概没有更好的方法了吧 格式化表示法变了，有点不适应， Google 解决 也许可以自制一个退出提示，为了命令提示符下运行的用户12Console.Write(\"\\n按任意键以退出\"); Console.ReadLine(); 收获 for 循环的效率比 foreach 高一点点 Console.Write(&quot;{0:D3} &quot;, box[i]); Console.Write(&quot;{0:000.000} &quot;, box[i]); 多维数组相关操作代码1234567891011121314151617181920212223242526272829303132using System;namespace ShuchuJuzhenZuidazhi&#123; class Program &#123; static void Main(string[] args) &#123; Random rd = new Random(); double[,] box = new double[8,8]; int add; for(int i=0;i&lt;8;i++) &#123; for (int n = 0; n &lt; 8; n++) box[i,n] = rd.Next(1000) / 7.0; &#125; for (int i = 0; i &lt; 8; i++) &#123; add = 0; for (int n = 0; n &lt; 8; n++) &#123; Console.Write(\"&#123;0:000.000&#125; \\t\", box[i, n]); if (box[i, n] &gt; box[i, add]) add = n; &#125; Console.WriteLine(\"\\t\\t### MAX IS &#123;0:.000&#125;\", box[i, add]); &#125; &#125; &#125;&#125; 运行 编写思路与难题 定义多重数组，并为之赋值 每行成员以及行内最大值的输出困难：越到最后越是没有什么话说，这里主要遇到的是数组的声明及使用。嘛，也很简单 box[i, n]收获 多多思考程序的界面设计，不要看起来一片模糊 Console.Write(&quot;{0:000.000} \\t&quot;, box[i, n]); Console.WriteLine(&quot;\\t\\t### MAX IS {0:.000}&quot;, box[i, add]);","tags":[{"name":"CS","slug":"CS","permalink":"https://zhangsy.tk/tags/CS/"},{"name":"Homework","slug":"Homework","permalink":"https://zhangsy.tk/tags/Homework/"}]},{"title":"[破事水]机房个性化工具","date":"2017-03-03T16:22:57.000Z","path":"2017/03/04/破事水-机房个性化工具/","text":"忽然发现，这是这一周一来唯一一篇博文。1234567891011121314151617181920212223242526272829303132333435363738394041@echo offecho 当前盘符：%~d0::0. 显示文件后缀名reg add &quot;HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced&quot; /v &quot;HideFileExt&quot; /t REG_DWORD /d 00000000::1. 壁纸set regadd=reg add &quot;HKEY_CURRENT_USER\\Control Panel\\Desktop%regadd%&quot; /v TileWallpaper /d &quot;0&quot; /f::0为居中，1为平铺%regadd%&quot; /v Wallpaper /d &quot;%~d0\\Mine\\壁纸\\wallhaven-312106.jpg&quot; /f%regadd%&quot; /v WallpaperStyle /d &quot;10&quot; /f::WallpaperStyle6为适应，2为拉伸，10为填充start RunDll32.exe USER32.DLL,UpdatePerUserSystemParameters::更换完成::2. Hostsxcopy &quot;%~d0\\Mine\\GFW\\hosts&quot; &quot;%~dp0&quot;xcopy &quot;%~dp0\\hosts&quot; &quot;C:\\Windows\\System32\\drivers\\etc&quot;ipconfig /flushdns::3. 常用文件拷贝xcopy %~dp0\\ZhangSiyang\\* /E D:\\ZhangSiyang\\ /Yxcopy %~dp0\\stu\\* /E D:\\stu\\ /Yecho 继续？pause::4. START Chrome&quot;%~d0\\Mine\\GFW\\ChromeUpdater+6.1.5\\chrome.exe&quot; https://www.google.com/ncrecho 继续？pause::5. 安装NPP&quot;%~d0\\Mine\\软件\\程序开发\\npp*Installer.exe&quot; /S::配置文件::6. 安装 RIME&quot;%~d0\\Mine\\软件\\程序开发\\weasel-0.9.30.0-installer.exe&quot; /S::配置文件","tags":[{"name":"Tool","slug":"Tool","permalink":"https://zhangsy.tk/tags/Tool/"},{"name":".Bat","slug":"Bat","permalink":"https://zhangsy.tk/tags/Bat/"}]},{"title":"JDK 的安装与配置【For Windows】","date":"2017-02-21T15:15:17.000Z","path":"2017/02/21/JDK-的安装与配置【For-Windows】/","text":"JDK 的安装 下载 JDK 安装包 我本人推荐从官网下载 JDK ，不要在什么 百度、360 上面下载http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html 选择合适你的版本，就像我，我选择的就是下图中最后那一个【阅读协议后，点击接受协议】 安装其实很简单，下一步 下一步 下一步就好了，如果已经安装过 JDK 或 JDE，最好卸载干净之后再安装新版 JDK。 JDK的配置 先寻找 JDK 安装到了哪里 一般都是安装到了 C:\\Program Files\\Java\\jdk1.8.0_121 这样的路径文件夹下通常有以下文件：bin/ jre/ src.zip COPYRIGHT lib/ THIRDPARTYLICENSEREADME.txt db/ LICENSE THIRDPARTYLICENSEREADME-JAVAFX.txt include/ README.html javafx-src.zip release 复制这个路径 至此，安装完成，下一步配置 JDK 环境 Win + R 打开运行，输入 sysdm.cpl ，回车 切换到 高级 选项卡，点击环境变量按钮，可参考下图 新建变量，名为 JAVA_HOME ,路径为 C:\\Program Files\\Java\\jdk1.8.0_121 【就是我们刚才找到的那个安装路径】 点击 Path ，点击编辑，点击 编辑文本 ，可参考下图 在出来的一串字符的最前面添加 %JAVA_HOME%/bin;%JAVA_HOME%/jre/bin; 保存退出。 3. 新建变量，名为 `CLASSPATH` ,路径为 `.;%JAVA_HOME%/lib/dt.jar;%JAVA_HOME%/lib/tools.jar` 【千万不要忽略前面的那个点】 4. 保存退出 至此，配置完成，下一步检测安装是否正确 Win + R 打开运行，输入 cmd ，回车 输入 java -version ，回车后出现如下内容即为正常 123java version &quot;1.8.0_121&quot;Java(TM) SE Runtime Environment (build 1.8.0_121-b13)Java HotSpot(TM) 64-Bit Server VM (build 25.121-b13, mixed mode) 输入 javac -version ，回车后出现如下内容即为正常 1javac 1.8.0_121 至此，安装与配置过程结束 —-EOF–","tags":[{"name":"Guide","slug":"Guide","permalink":"https://zhangsy.tk/tags/Guide/"},{"name":"JDK","slug":"JDK","permalink":"https://zhangsy.tk/tags/JDK/"},{"name":"Java","slug":"Java","permalink":"https://zhangsy.tk/tags/Java/"}]},{"title":"SQL Server 2016 Developer with Service Pack 1 下载链接 [Download Link]","date":"2017-02-21T09:42:16.000Z","path":"2017/02/21/SQL-Server-2016-Developer-with-Service-Pack-1-下载链接-Download-Link/","text":"SQL Server 2016 Developer with Service Pack 1 (x64) - DVD (Chinese-Simplified)文件名： cn_sql_server_2016_developer_with_service_pack_1_x64_dvd_9547670.iso发布日期： 2016/12/2语言： Chinese - SimplifiedSHA1：D4A73F491DF47AF46C933D711259EA099C1A8537 Download Link:ed2k://|file|cn_sql_server_2016_developer_with_service_pack_1_x64_dvd_9547670.iso|2959722496|9D6964555409F8E4BBFD3439E15921E9|/ 注：根据微软的授权，本版本对开发者的非商业用途进行免费授权使用","tags":[{"name":"SQL","slug":"SQL","permalink":"https://zhangsy.tk/tags/SQL/"},{"name":"Software","slug":"Software","permalink":"https://zhangsy.tk/tags/Software/"}]},{"title":"你好，世界！","date":"2017-02-20T13:54:23.000Z","path":"2017/02/20/你好，世界！/","text":"今天是开学第一天，昨晚看过课表之后竟有种 二上大一上 的感觉，上午高数讲了好多图形相关的，感觉蛮适合我这种学渣，英语依然是 LiuYuran 老师，很欢快嘛。 BTW, 数学课上迟到好多人，很同情高数老师， 对了！迟到的同学正好碰上查教室人数的老师…… 令人眼前一亮的是下午的数据库，老师很严厉，听说是传说中的上学期 3/4 班的 C 老师，希望这学期数据库也可以学习得比较好吧，毕竟我是要写大软件的男人～～ 流水账写完了，综合来看还是没什么劲的，至于毛概课， 我就不提了。 回见了您呐！ 文章本来被我误删了，又从 .save 文件恢复了，开心！ 今天想写一条命令上来：ssh-keygen -t rsa -b 4096 -C “your_email@example.com”","tags":[{"name":"随笔","slug":"随笔","permalink":"https://zhangsy.tk/tags/随笔/"}]},{"title":"一种更棒的树莓派换源思路","date":"2017-02-16T11:55:02.000Z","path":"2017/02/16/一种更棒的树莓派换源思路/","text":"最近两天情绪很失落，具体原因就别说了，人在这种时刻总爱干点别的事情去转移注意力，这次我选择了玩我的树莓派。 事情就是那么赶巧，怂人就好敲个 update 这种时刻我爱钻研的劲儿上来了，明明我换过更新源的，怎么还有 raspberrypi.org 的字样呢？更别提那论字节数的速度了，想想都知道我 ?? 在国际出口又没干什么好事儿。别的不多说了，直接贴配置文件吧：首先是大家都知道的 sources.list 源【这里选用了清华大学的源 ; 有时候我也想，我们学校怎么不弄个镜像呢？哈哈 呵呵】 123cat /etc/apt/sources.listdeb http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ jessie main non-free contribdeb-src http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ jessie main non-free contrib 另一个源配置文件 raspi.list 就不是那么人人皆知了，但时间大都浪费在了这里 1234567cat /etc/apt/sources.list.d/raspi.list#deb http://archive.raspberrypi.org/debian/ jessie main ui# Uncomment line below then &apos;apt-get update&apos; to enable &apos;apt-get source&apos;#deb-src http://archive.raspberrypi.org/debian/ jessie main ui# use Ustc mirror:deb http://mirrors.ustc.edu.cn/archive.raspberrypi.org/ jessie main ui 事后我又发现，apt-get upgrade 对 HTTPS 的支持并不好，不知道原因试用 Https 连接方式却发现系统不支持【见下面的代码】 ; 根据系统出错信息，apt-get install 装个 apt-transport-https 就好了12E: 无法找到获取软件包的渠道 /usr/lib/apt/methods/https 所需的驱动程序。N: 请检查是否安装了 apt-transport-https 软件包 附：下面这种情况运行一下apt-get update就好了，原因未知，等待调查12345678910111213pi@RaspberryPi-2B:sudo apt-get install apt-transport-https正在读取软件包列表... 完成正在分析软件包的依赖关系树正在读取状态信息... 完成下列【新】软件包将被安装： apt-transport-https升级了 0 个软件包，新安装了 1 个软件包，要卸载 0 个软件包，有 6 个软件包未被升级。需要下载 134 kB 的软件包。解压缩后会消耗掉 185 kB 的额外空间。【警告】：下列软件包不能通过验证！ apt-transport-https不经验证就安装这些软件包吗？ [y/N] nE: 有些软件包不能通过验证","tags":[{"name":"Guide","slug":"Guide","permalink":"https://zhangsy.tk/tags/Guide/"},{"name":"RPi","slug":"RPi","permalink":"https://zhangsy.tk/tags/RPi/"},{"name":"Think","slug":"Think","permalink":"https://zhangsy.tk/tags/Think/"}]},{"title":"怎样将文件上传到 Github","date":"2017-02-08T16:24:13.000Z","path":"2017/02/09/怎样将文件上传到-Github/","text":"把想要向大家分享的文件上传到 Github 似乎是一个比较不错的选择，下载速度快，易于分享，棒棒的！可是我笨笨的，老是容易忘，所以干脆写下来分享给大家和自己！ 【第一步】在Github中建立仓库建立仓库用图形化的方式还是很适合的，毕竟方便又简单嘛 打开你的 Github 主页 点击右上角的 “New repository” 填入仓库名称，描述也可以写上去 建议点击下方的 “Initialize this repository with a README” 就可以省去上传README文件的步骤了 点击 “Create repository” 以完成 【第二步】克隆仓库 使用之前，请先确认你的账户信息已被添加到系统之中你可以使用以下两条命令来添加你的账户信息： git config --global user.email &quot;CE.BB.CAT@GMAIL.COM&quot; //这是我的 Github 注册邮箱 git config --global user.name &quot;Zhang-Siyang&quot; //这是我的 Github 用户名 我们先来看一下目前的文件系统情况： pi@RaspberryPi-2B:~ $ lsBuckup Desktop Documents Downloads Music oldconffiles Pictures Public python_games Templates Videos 运行 git clone ，把 Github 上的仓库 “克隆” 下来1git clone https://github.com/Zhang-Siyang/Text.git 现在的文件按系统情况： pi@RaspberryPi-2B:~ $ lsBuckup Desktop Documents Downloads Music oldconffiles Pictures Public python_games Templates Text Videos可以看到，Text 已经clone下来了 现在就可以进入 Text 目录编写新文件了！ [ 不过如果没有README.md的话，还是建立一个比较好 ]例如：history &gt;History.Txt 【第三步】建立 README.md 文档 这时你应该处于 Text 文件夹内，你输入pwd 之后应该会提示像这样的信息，关键是最后一级：12&gt;/home/pi/Text&gt; 依次执行下列命令echo “# 这里是测试用的文件夹，稍后应该被删除” &gt;&gt; README.md12345git initgit add README.mdgit commit -m &quot;建立 README.md 文档git remote add origin https://github.com/Zhang-Siyang/Text.gitgit push -u origin master 如果有出错信息，看第四步中的解决方法 【第四步】上传当前文件夹内所有文件依次执行下列命令12345git add .git commit -m &quot;测试上传一个TXT文档&quot;git remote add origin https://github.com/Zhang-Siyang/Text.gitgit push origin master 输入密码即完成上传 如果提示”fatal: 远程 origin 已经存在。”则执行：git remote rm origin，然后从上一条命令接着执行效果：全部文件视图： 文件内容： 我还是一个小白，应该还会有不少纰漏，欢迎大牛斧正 ！感谢 关于初学者上传文件到github的方法 第一次教会了我。是Findingsea写的。 文章相关原图下载：原图","tags":[{"name":"Guide","slug":"Guide","permalink":"https://zhangsy.tk/tags/Guide/"},{"name":"Github","slug":"Github","permalink":"https://zhangsy.tk/tags/Github/"},{"name":"Howto","slug":"Howto","permalink":"https://zhangsy.tk/tags/Howto/"}]},{"title":"我在树莓派上都做了些什么","date":"2017-02-07T05:54:35.000Z","path":"2017/02/07/我在树莓派上都做了些什么/","text":"DDNS Vsftp Node.js Hexo NTP Nginx","tags":[{"name":"随笔","slug":"随笔","permalink":"https://zhangsy.tk/tags/随笔/"},{"name":"RPi","slug":"RPi","permalink":"https://zhangsy.tk/tags/RPi/"}]},{"title":"红米Note3 强刷及强制解除 Bootload 锁教程","date":"2017-02-03T12:50:53.000Z","path":"2017/02/03/Note3-强刷及强制解除-Bootload-锁教程/","text":"昨天【2017-02-02】想给手机从头到尾重新做一遍系统，结果一不小心把手机 BL 锁上了，手机系统又已经清空无法用官方工具解锁，多亏了下面那篇译文才得以重新解开 BL 锁。这篇文章就是把那篇译文整理之后的作品。 闲话：一直以来都比较喜欢小米公司，觉得很合我的心，年轻、爱发烧，但最近我发现去官网找个文件都找不到，“产能不足”也很严重。是小米急躁了吗？ 进入9008强刷模式 解压附件”fastboot_edl.7z”并进入解压出的文件夹，你应该能看到几个文件 重启你的手机到 fastboot 模式（按住“音量下”与“电源键”），将之连接电脑 双击文件夹中的 edl.cmd 手机震动之后，就代表已经从 900E 模式暂时跳转到 9008 模式了，手机会亮起红色呼吸灯，具体可进入设备管理器确认 进入设备管理器，安装附件中的高通驱动 强行解锁bootloader 将线刷前的手机系统开启 开发者模式 并开启 OEM解锁模式 用 Unlocked_Bootloader.zip 中的 emmc_appsboot.mbn 替换线刷包中的对应文件 在9008模式下用文末提供的刷机工具刷入经替换之后的线刷包【建议选择 清除所有数据 】。刷入之后进入 Fastboot 模式，在电脑端执行以下命令即可解除BL锁 fastboot oem unlock-go fastboot oem device-info 第二条命令提示“Device unlocked：ture”【如下图】代表成功解锁，机器会震动后进入系统若解锁失败，机器震动后将会闪两次 MI 字界面 之后黑屏，失败原因大多是线刷前系统未开启开发者模式-未勾选OEM解锁模式选项 所需文件 Name:【刷机工具】MiPhone20151028.exe-Size:26.0 MB (27,305,815 字节)CRC32: 47962DD3MD5: 64A2B6F5620DB2BF249DAC0CE2017428SHA-1: 7FA20958DA2A4061DAFA5A007D3575895927EED7Download:http://121.22.250.4/bigota.d.miui.com/tools/MiPhone20151028.exeName:【高通驱动】Qualcomm_Driver.7z-Download:https://www.dropbox.com/s/owqq8f5385j2c5n/Qualcomm_Driver.7z?dl=1Size:339 KB (347,919 字节)CRC32: 37EB2F65MD5: 50C8020099D6DE5F8DD92F485CA95A9BSHA-1: A906552770CB6286A50A2016EC639D01B2D33EA9Name:【原线刷包】kenzo_global_images_V7.1.8.0.LHOMICL_20160129.0000.14_5.1_global_9706e12561.tgz-Size:1.26 GB (1,356,148,824 字节)CRC32: 334B0B9AMD5: 9706E1256126FCB74F373BCAB6848E9ESHA-1: B7D9FC7C80ADF0D94002A0BFF8B3A16ADDA8C14DDownload:http://obigota.d.miui.com/V7.1.8.0.LHOMICL/kenzo_global_images_V7.1.8.0.LHOMICL_20160129.0000.14_5.1_global_9706e12561.tgzName:fastboot_edl.7z-Size:135 KB (138,259 字节)Download:https://www.dropbox.com/s/p6noweo7yl21d5g/fastboot_edl.7z?dl=1CRC32: E79A4C7FMD5: BD5DB3C6DDA08910312849CF39EE3F18SHA-1: 7A9FE43E254A4C7B22BB7A2890903F7D029B9378Name:Unlocked_Bootloader.zip-Size:212 KB (217,205 字节)Download:https://www.dropbox.com/s/vw3nf1zbvvco44h/Unlocked_Bootloader.zip?dl=1CRC32: D2CCA8C7MD5: F69EEB321FB63C4CCAC51CBEF7545B87SHA-1: 51CBFD17C177841A1786095BFFEABFC53E536EE6 注：如以上文件的下载链接失效，请发送邮件至CE.BB.CAT(at)GMAIL.COM。特别地，线刷包【可能】可以用其他线刷包替代。 原文【By:emuzychenko】：https://forum.xda-developers.com/android/software-hacking/guide-how-to-reboot-to-edl-fastboot-t3394292 本文基于译文【By:clawneo】：http://bbs.zhiyoo.com/forum.php?mod=viewthread&amp;tid=12591147","tags":[{"name":"XiaoMi","slug":"XiaoMi","permalink":"https://zhangsy.tk/tags/XiaoMi/"},{"name":"RedMi Note3","slug":"RedMi-Note3","permalink":"https://zhangsy.tk/tags/RedMi-Note3/"},{"name":"Guide","slug":"Guide","permalink":"https://zhangsy.tk/tags/Guide/"},{"name":"Unlock","slug":"Unlock","permalink":"https://zhangsy.tk/tags/Unlock/"},{"name":"Flash","slug":"Flash","permalink":"https://zhangsy.tk/tags/Flash/"}]}]